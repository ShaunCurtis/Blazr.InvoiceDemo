@*
============================================================
   Author: Shaun Curtis, Cold Elm Coders
   License: Use And Donate
   If you use it, donate something to a charity somewhere
============================================================
*@

@*
    This Razor file contains all the Razor markup defined Render Fragments
    The C# code in the the code-behind file
*@

@namespace Blazr.UI.BlazrGrid
@inherits UIBase
@typeparam TGridItem where TGridItem : class, new()
@implements IDisposable

@*
    No Default Content is defined for the component
    The content is built from the Child Content and the Registered Grid Columns
*@

@code {
    /// <summary>
    /// Render fragment that is used to build out the child centent
    /// This contains the column definition components which register their content
    /// </summary>
    private RenderFragment captureColumnsRenderFragment => (__builder) =>
    {
        _gridColumns.Clear();
        <CascadingValue Value="this.RegisterColumn">
            @ChildContent
        </CascadingValue>

        // The render fragment has been run by the renderer so we vcan set the Task to complete.
        _firstRenderTaskManager?.TrySetResult();
    };

    /// <summary>
    /// Render fragment to build out the grid
    /// </summary>
    protected virtual RenderFragment gridRenderFragment => (__builder) =>
    {
        int rowIndex = 0;

        <table class="@BlazrGridCss.TableCss">
            <thead class="@BlazrGridCss.TableHeaderCss">
                @{
                    this.renderHeaderRow(__builder);
                }
            </thead>
            <tbody>
                @foreach (var item in _items)
                {
                    this.renderRow(__builder, rowIndex, item);
                    rowIndex++;
                }
            </tbody>
        </table>
    };

    /// <summary>
    /// Render Fragment to render the header row
    /// </summary>
    /// <param name="__builder"></param>
    protected virtual void renderHeaderRow(RenderTreeBuilder __builder)
    {
        <tr>
            @foreach (var col in _gridColumns)
            {
                col.GetItemHeaderContent(__builder);
            }
        </tr>
    }

    /// <summary>
    /// Render fragmnet to render a row in the table
    /// </summary>
    /// <param name="__builder"></param>
    /// <param name="rowIndex"></param>
    /// <param name="item"></param>
    protected virtual void renderRow(RenderTreeBuilder __builder, int rowIndex, TGridItem item)
    {
        <tr aria-rowindex="@rowIndex" class="@BlazrGridCss.TableRowCss">
            @foreach (var col in _gridColumns)
            {
                col.GetItemRowContent(__builder, item);
            }
        </tr>
    }
}
