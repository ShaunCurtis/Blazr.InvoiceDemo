@namespace Blazr.App.UI
@typeparam TRecord where TRecord : class, new()
@typeparam TEditContext where TEditContext : class, IEditContext, IRecordEditContext<TRecord>, new()
@typeparam TEntityService where TEntityService : class, IEntityService
@inherits UIWrapperBase

@code {
    private bool _noSave => !(this.Presenter.EditStateContext.IsDirty && this.Presenter.EditStateContext.IsValid);
    private bool _isDirty => this.Presenter.EditStateContext.IsDirty;
    private bool _isClean => !this.Presenter.EditStateContext.IsDirty;
    protected string FormTitle => $"{this.UIEntityService.SingleDisplayName} Editor";

    protected override RenderFragment TemplatedContent => (__builder) =>
    {
        <PageTitle>@this.FormTitle</PageTitle>

        @this.HeaderContent

        <CascadingValue Value="Presenter.EditStateContext">
            @this.Content
            @this.ActionBarContent
        </CascadingValue>

        <NavigationLock ConfirmExternalNavigation=this.Presenter.EditStateContext.IsDirty />
    };
    
    protected virtual RenderFragment? HeaderButtonContent { get; }

    protected virtual RenderFragment HeaderContent => (__builder) =>
    {
        <div class="d-flex flex-row mb-4 pt-1 pb-2 border-bottom">
            <div class="flex-fill justify-content-start">
                <span class="h3">@this.FormTitle</span>
            </div>
            <div class="justify-content-end">
                @this.HeaderButtonContent
            </div>
        </div>
    };

    protected virtual RenderFragment ActionBarContent => (__builder) =>
    {
            <div class="row">
                <div class="col-12 text-end">
                    <UIButton ButtonType=UIButtonType.Warning Hidden=_isClean ClickEvent=this.OnReset>Reset</UIButton>
                    <UIButton ButtonType=UIButtonType.Save Hidden=_noSave ClickEvent=this.OnSave>Save</UIButton>
                    <UIButton ButtonType=UIButtonType.Exit Hidden=_isDirty ClickEvent=this.OnExit>Exit</UIButton>
                    <UIButton ButtonType=UIButtonType.ExitWithoutSave Hidden=_isClean ClickEvent=this.OnExit>Exit without Saving</UIButton>
                </div>
            </div>
    };
}
