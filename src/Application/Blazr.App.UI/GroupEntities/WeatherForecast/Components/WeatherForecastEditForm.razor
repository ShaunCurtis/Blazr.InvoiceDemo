@namespace Blazr.App.UI
@inject WeatherSummaryPresenter SummaryPresenter
@inherits UIEditorFormBase<WeatherForecast, WeatherForecastEditContext>

<h3>Weather Forecast Editor</h3>

    <div class="row">

        <div class="col-12 col-lg-6 mb-2">
            <BlazrInputControl Type=InputType.Number class="form-control" UpdateOnInput=true @bind-Value=this.EditContext.TemperatureC />
        </div>

        <div class="col-12 col-lg-6 mb-2">
            <BlazrInputControl Type=InputType.Date TValue="DateOnly?" class="form-control" UpdateOnInput=true @bind-Value=this.EditContext.Date />
        </div>

        <div class="col-12 col-lg-6 mb-2">
            <BlazrSelectControl class="form-select" TValue="string" ValueExpression="() =>this.EditContext.Summary" @bind-value=this.EditContext.Summary>
                @this.SummariesSelect
            </BlazrSelectControl>
        </div>

    </div>

@code {

    protected override async ValueTask<bool> OnParametersChangedAsync(bool firstRender)
    {
        if (firstRender)
        {
            await this.SummaryPresenter.LoadAsync();
            this.Presenter.EditStateContext.AddFluentValidation<WeatherForecastValidator>();
        }
        return true;
    }

    public RenderFragment SummariesSelect => (__builder) =>
    {
        @if (string.IsNullOrWhiteSpace(this.EditContext.Summary))
        {
            <option selected disabled value="">--  Select a Summary --</option>
        }
        @foreach (var value in this.SummaryPresenter.Items)
        {
            <option value="@value.Summary">@value.Summary</option>
        }
    };
}
