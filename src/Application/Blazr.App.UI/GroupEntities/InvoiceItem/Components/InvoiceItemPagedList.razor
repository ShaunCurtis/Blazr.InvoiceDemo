@namespace Blazr.App.UI
@inherits UIPagedListFormBase<InvoiceItem, InvoiceItemEntityService>

<BlazrSortedGridColumn TGridItem="InvoiceItem" SortField="@ApplicationConstants.ProductCode" IsNoWrap=true Title="Product Code">
    @context.ProductCode
</BlazrSortedGridColumn>

<BlazrSortedGridColumn TGridItem="InvoiceItem" SortField="@ApplicationConstants.ProductName" IsNoWrap=true Title="Product">
    @context.ProductName
</BlazrSortedGridColumn>

<BlazrSortedGridColumn TGridItem="InvoiceItem" SortField="@ApplicationConstants.ItemQuantity" IsNoWrap=true Title="Qty">
    @context.ItemQuantity
</BlazrSortedGridColumn>

<BlazrSortedGridColumn TGridItem="InvoiceItem" SortField="@ApplicationConstants.ItemUnitPrice" IsNoWrap=true Title="Unit Cost">
    @context.ItemUnitPrice.AsSterling()
</BlazrSortedGridColumn>

@*
<BlazrSortedGridColumn TGridItem="InvoiceItem" SortField="@ApplicationConstants." IsNoWrap=true Title="Invoice No">
    @context.
</BlazrSortedGridColumn>

<BlazrSortedGridColumn TGridItem="InvoiceView" IsMaxColumn=true SortField="@ApplicationConstants.CustomerName" IsNoWrap=true Title="Customer">
    @context.CustomerName
</BlazrSortedGridColumn>

<BlazrSortedGridColumn TGridItem="InvoiceView" SortField="@ApplicationConstants.InvoiceDate" IsNoWrap=true Title="Date">
    @context.InvoiceDate.AsGlobalDate()
</BlazrSortedGridColumn>

<BlazrSortedGridColumn TGridItem="InvoiceView" SortField="@ApplicationConstants.InvoicePrice" class="text-end pe-2" IsNoWrap=true Title="Total">
    @context.InvoicePrice.AsSterling()
</BlazrSortedGridColumn>

<BlazrGridColumn TGridItem="InvoiceView" Title="Actions" IsNoWrap=true Class="text-end">
    <UIButtonGroup>
        <button class="btn btn-sm btn-secondary" @onclick="() => OnViewAsync(context)">View</button>
        <button class="btn btn-sm btn-primary" @onclick="() => OnEditAsync(context)">Edit</button>
    </UIButtonGroup>
</BlazrGridColumn>
*@

@code {
    [Parameter] public Guid InvoiceUid { get; set; }

    protected override ValueTask<bool> OnParametersChangedAsync(bool firstRender)
    {
        var filters = new List<FilterDefinition> { new FilterDefinition(ApplicationConstants.ByInvoiceUid, InvoiceUid.ToString()) };
        this.Presenter.SetFilter(new FilterRequest<InvoiceItem>() { Filters = filters });
        return ValueTask.FromResult( true);
    }
}
